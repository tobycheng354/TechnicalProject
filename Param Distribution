import math
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from scipy import stats
import matplotlib as mpl
import matplotlib.font_manager as font_manager

mpl.rcParams['font.family']='serif'
cmfont = font_manager.FontProperties(fname=mpl.get_data_path() + '/fonts/ttf/cmr10.ttf')
mpl.rcParams['font.serif']=cmfont.get_name()
mpl.rcParams['mathtext.fontset']='cm'
mpl.rcParams['axes.unicode_minus']=False



#data
data = pd.read_csv("~/Desktop/ResultsCourse.csv")
n = len(data)
HVI = data['HorizontalVelIn']
VVI = data['VerticalVelIn']
SI = data['SpinIn']
HVO = data['HorizontalVelOut']
VVO = data['VerticalVelOut']
SO = data['SpinOut']

ang_min1 = np.load("/Users/TobyCheng/Desktop/OptimalAng1.npy")
mu_min1 = np.load("/Users/TobyCheng/Desktop/OptimalMu1.npy")
e_min1 = np.load("/Users/TobyCheng/Desktop/OptimalE1.npy")
ang_min2 = np.load("/Users/TobyCheng/Desktop/OptimalAng2.npy")
mu_min2 = np.load("/Users/TobyCheng/Desktop/OptimalMu2.npy")
e_min2 = np.load("/Users/TobyCheng/Desktop/OptimalE2.npy")


ang_vals = [ang_min1,
            ang_min2]
mu_vals = [mu_min1,
           mu_min2]
e_vals = [e_min1,
          e_min2]

font_size = 12
label_size = 12
fig, axs = plt.subplots(1,3,figsize=(15, 15))
axs[0].boxplot(ang_vals, widths = 0.5, labels = ["Astro", "Course"], showmeans = True, showfliers = False)
axs[0].set_ylim([-1, 41])
axs[0].set_ylabel("Optimal Value of "+r"$\theta_c$", fontsize = font_size)
axs[0].tick_params(axis='both', which='major', labelsize=label_size)

axs[1].boxplot(mu_vals, widths = 0.5, labels = ["Astro", "Course"], showmeans = True, showfliers = False)
axs[1].set_ylim([-0.1, 1.1])
axs[1].set_yticks([0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0])
axs[1].set_ylabel("Optimal Value of "+r"$\mu$", fontsize = font_size)
axs[1].tick_params(axis='both', which='major', labelsize=label_size)

axs[2].boxplot(e_vals, widths = 0.5, labels = ["Astro", "Course"], showmeans = True, showfliers = False)
axs[2].set_ylim([-0.1, 1.1])
axs[2].set_yticks([0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0])
axs[2].set_ylabel("Optimal Value of "+r"$e$", fontsize = font_size)
axs[2].tick_params(axis='both', which='major', labelsize=label_size)

for ax in axs:
    ax.set_box_aspect(1)
